{"ast":null,"code":"import _asyncToGenerator from \"/Users/kanghyunjin/Documents/study/my-babylon/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as BABYLON from 'babylonjs';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"rendererCanvas\"];\nexport class AppComponent {\n  constructor(ngZone) {\n    this.ngZone = ngZone;\n    this.importMeshes = {};\n  }\n\n  createScene() {\n    console.log(this.rendererCanvas.nativeElement);\n    const engine = this.engine = new BABYLON.Engine(this.rendererCanvas.nativeElement, true);\n    const scene = this.scene = new BABYLON.Scene(engine);\n    const camera = this.camera = new BABYLON.FreeCamera('camera', new BABYLON.Vector3(0, 0, 0), scene);\n    const light = new BABYLON.HemisphericLight('light', new BABYLON.Vector3(0, 50, 0), scene);\n  } // @@이 친구를 잘 봐두자@@\n\n\n  runRenderLoop() {\n    this.ngZone.runOutsideAngular(() => {\n      this.createScene();\n\n      const rendererLoopCallback = () => {\n        this.scene.render();\n      };\n\n      if (document.readyState !== 'loading') {\n        this.engine.runRenderLoop(rendererLoopCallback);\n      } else {\n        window.addEventListener('DOMContentLoaded', () => {\n          this.engine.runRenderLoop(rendererLoopCallback);\n        });\n      }\n\n      window.addEventListener('resize', () => {\n        this.engine.resize();\n      });\n    });\n  }\n\n  instMeshes(fileName, scene) {\n    return fileName.map(name => BABYLON.SceneLoader.LoadAssetContainerAsync('asstes/lib', name, scene));\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.runRenderLoop();\n\n      const beImported = ['shinwoo_level1.glb', 'shinwoo_level2.glb'];\n      const imports = yield Promise.all(_this.instMeshes(beImported, _this.scene));\n      beImported.forEach((fileName, i) => {\n        _this.importMeshes[fileName] = imports[i];\n      });\n    })();\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nAppComponent.ɵcmp = i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  viewQuery: function AppComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 3);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.rendererCanvas = _t.first);\n    }\n  },\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"container\"], [\"id\", \"renderCanvas\"], [\"rendererCanvas\", \"\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"canvas\", 1, 2);\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\".container[_ngcontent-%COMP%] {\\n  width: 100vw;\\n  height: 100vh;\\n}\\n\\n#renderCanvas[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7QUFDZjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0FBQ2QiLCJmaWxlIjoiYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMHZ3O1xuICBoZWlnaHQ6IDEwMHZoO1xufVxuXG4jcmVuZGVyQ2FudmFzIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cbiJdfQ== */\"]\n});","map":{"version":3,"sources":["/Users/kanghyunjin/Documents/study/my-babylon/src/app/app.component.ts","/Users/kanghyunjin/Documents/study/my-babylon/src/app/app.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  ElementRef,\n  NgZone,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport * as BABYLON from 'babylonjs';\nimport { SceneLoader } from 'babylonjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  public canvas!: HTMLCanvasElement;\n  public engine!: BABYLON.Engine;\n  public scene!: BABYLON.Scene;\n  public camera!: BABYLON.FreeCamera;\n\n  @ViewChild('rendererCanvas', { static: true })\n  public rendererCanvas!: ElementRef<HTMLCanvasElement>;\n\n  constructor(private ngZone: NgZone) {}\n\n  public createScene(): void {\n    console.log(this.rendererCanvas.nativeElement);\n\n    const engine = (this.engine = new BABYLON.Engine(\n      this.rendererCanvas.nativeElement,\n      true\n    ));\n\n    const scene = (this.scene = new BABYLON.Scene(engine));\n\n    const camera = (this.camera = new BABYLON.FreeCamera(\n      'camera',\n      new BABYLON.Vector3(0, 0, 0),\n      scene\n    ));\n    const light = new BABYLON.HemisphericLight(\n      'light',\n      new BABYLON.Vector3(0, 50, 0),\n      scene\n    );\n  }\n\n  // @@이 친구를 잘 봐두자@@\n  private runRenderLoop(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.createScene();\n      const rendererLoopCallback = () => {\n        this.scene.render();\n      };\n\n      if (document.readyState !== 'loading') {\n        this.engine.runRenderLoop(rendererLoopCallback);\n      } else {\n        window.addEventListener('DOMContentLoaded', () => {\n          this.engine.runRenderLoop(rendererLoopCallback);\n        });\n      }\n\n      window.addEventListener('resize', () => {\n        this.engine.resize();\n      });\n    });\n  }\n  public instMeshes(\n    fileName: string[],\n    scene: BABYLON.Scene\n  ): Promise<BABYLON.AssetContainer>[] {\n    return fileName.map((name) =>\n      BABYLON.SceneLoader.LoadAssetContainerAsync('asstes/lib', name, scene)\n    );\n  }\n\n  public importMeshes: { [fileName: string]: BABYLON.AssetContainer } = {};\n\n  async ngOnInit() {\n    this.runRenderLoop();\n\n    const beImported = ['shinwoo_level1.glb', 'shinwoo_level2.glb'];\n    const imports = await Promise.all(this.instMeshes(beImported, this.scene));\n    beImported.forEach((fileName, i) => {\n      this.importMeshes[fileName] = imports[i];\n    });\n  }\n}\n","<div class=\"container\">\n  <canvas #rendererCanvas id=\"renderCanvas\"></canvas>\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}