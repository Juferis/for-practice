{"ast":null,"code":"import _asyncToGenerator from \"/Users/kanghyunjin/Documents/study/my-babylon/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as BABYLON from 'babylonjs'; // 아래 친구는 로더이다 ImportMesh를 사용하기 위함\n\nimport 'babylonjs-loaders';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"rendererCanvas\"];\nexport class AppComponent {\n  constructor(ngZone) {\n    this.ngZone = ngZone;\n  } // 화면 생성\n\n\n  createScene() {\n    const engine = this.engine = new BABYLON.Engine(this.rendererCanvas.nativeElement, true);\n    const scene = this.scene = new BABYLON.Scene(engine);\n    const camera = this.camera = new BABYLON.FreeCamera('camera', new BABYLON.Vector3(0, 50, 0), scene);\n    const light = new BABYLON.HemisphericLight('light', new BABYLON.Vector3(0, 50, 0), scene);\n    var ground = BABYLON.MeshBuilder.CreateGround('ground', {\n      width: 13,\n      height: 38\n    }, scene);\n    ground.position.x = +1;\n  } // @@이 친구를 잘 봐두자@@ 생성한 화면을 보여주기\n\n\n  runRenderLoop() {\n    this.ngZone.runOutsideAngular(() => {\n      this.createScene();\n\n      const rendererLoopCallback = () => {\n        this.scene.render();\n      };\n\n      if (document.readyState !== 'loading') {\n        this.engine.runRenderLoop(rendererLoopCallback);\n      } else {\n        window.addEventListener('DOMContentLoaded', () => {\n          this.engine.runRenderLoop(rendererLoopCallback);\n        });\n      }\n\n      window.addEventListener('resize', () => {\n        this.engine.resize();\n      });\n    });\n  } // 메쉬를 가져와 화면에 띄워주기\n\n\n  importMeshes1() {\n    BABYLON.SceneLoader.ImportMesh('', 'assets/lib/', 'shinwoo_level1.glb', this.scene, () => {\n      this.scene.createDefaultCamera(true, true, true);\n    });\n  } // public importMeshes2() {\n  //   BABYLON.SceneLoader.ImportMesh(\n  //     '',\n  //     'assets/lib/',\n  //     'shinwoo_level2.glb',\n  //     this.scene,\n  //     () => {\n  //       this.scene.createDefaultCamera(true, true, true);\n  //     }\n  //   );\n  // }\n\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.runRenderLoop();\n\n      _this.importMeshes1(); // this.importMeshes2();\n\n    })();\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nAppComponent.ɵcmp = i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  viewQuery: function AppComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 3);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.rendererCanvas = _t.first);\n    }\n  },\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"container\"], [\"id\", \"renderCanvas\"], [\"rendererCanvas\", \"\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"canvas\", 1, 2);\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\".container[_ngcontent-%COMP%] {\\n  width: 100vw;\\n  height: 100vh;\\n}\\n\\n#renderCanvas[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7QUFDZjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0FBQ2QiLCJmaWxlIjoiYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMHZ3O1xuICBoZWlnaHQ6IDEwMHZoO1xufVxuXG4jcmVuZGVyQ2FudmFzIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cbiJdfQ== */\"]\n});","map":{"version":3,"sources":["/Users/kanghyunjin/Documents/study/my-babylon/src/app/app.component.ts","/Users/kanghyunjin/Documents/study/my-babylon/src/app/app.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  ElementRef,\n  NgZone,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport * as BABYLON from 'babylonjs';\n// 아래 친구는 로더이다 ImportMesh를 사용하기 위함\nimport 'babylonjs-loaders';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  public canvas!: HTMLCanvasElement;\n  public engine!: BABYLON.Engine;\n  public scene!: BABYLON.Scene;\n  public camera!: BABYLON.FreeCamera;\n\n  @ViewChild('rendererCanvas', { static: true })\n  public rendererCanvas!: ElementRef<HTMLCanvasElement>;\n\n  constructor(private ngZone: NgZone) {}\n\n  // 화면 생성\n  public createScene(): void {\n    const engine = (this.engine = new BABYLON.Engine(\n      this.rendererCanvas.nativeElement,\n      true\n    ));\n\n    const scene = (this.scene = new BABYLON.Scene(engine));\n\n    const camera = (this.camera = new BABYLON.FreeCamera(\n      'camera',\n      new BABYLON.Vector3(0, 50, 0),\n      scene\n    ));\n\n    const light = new BABYLON.HemisphericLight(\n      'light',\n      new BABYLON.Vector3(0, 50, 0),\n      scene\n    );\n    var ground = BABYLON.MeshBuilder.CreateGround(\n      'ground',\n      { width: 13, height: 38 },\n      scene\n    );\n    ground.position.x = +1;\n  }\n\n  // @@이 친구를 잘 봐두자@@ 생성한 화면을 보여주기\n  private runRenderLoop(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.createScene();\n      const rendererLoopCallback = () => {\n        this.scene.render();\n      };\n\n      if (document.readyState !== 'loading') {\n        this.engine.runRenderLoop(rendererLoopCallback);\n      } else {\n        window.addEventListener('DOMContentLoaded', () => {\n          this.engine.runRenderLoop(rendererLoopCallback);\n        });\n      }\n\n      window.addEventListener('resize', () => {\n        this.engine.resize();\n      });\n    });\n  }\n\n  // 메쉬를 가져와 화면에 띄워주기\n  public importMeshes1() {\n    BABYLON.SceneLoader.ImportMesh(\n      '',\n      'assets/lib/',\n      'shinwoo_level1.glb',\n      this.scene,\n      () => {\n        this.scene.createDefaultCamera(true, true, true);\n      }\n    );\n  }\n\n  // public importMeshes2() {\n  //   BABYLON.SceneLoader.ImportMesh(\n  //     '',\n  //     'assets/lib/',\n  //     'shinwoo_level2.glb',\n  //     this.scene,\n  //     () => {\n  //       this.scene.createDefaultCamera(true, true, true);\n  //     }\n  //   );\n  // }\n  async ngOnInit() {\n    this.runRenderLoop();\n    this.importMeshes1();\n    // this.importMeshes2();\n  }\n}\n","<div class=\"container\">\n  <canvas #rendererCanvas id=\"renderCanvas\"></canvas>\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}